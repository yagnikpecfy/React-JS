{"ast":null,"code":"var _jsxFileName = \"/Users/prafulkamble/React JS/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = message => {\n    setAlert(message);\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const colorMode = () => {\n    if (mode !== 'red') {\n      setMode('red');\n      document.body.style.backgroundColor = 'red';\n      showAlert(\"red mode\");\n    } else {\n      setMode('green');\n      document.body.style.backgroundColor = 'green';\n      showAlert(\"Green mode\");\n    }\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Dark mode\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      aboutUs: \"About TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode,\n      colorMode: colorMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/users\",\n          children: /*#__PURE__*/_jsxDEV(TextForm, {\n            heading: \"Enter Text To Convert\",\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"rLXVx9POVuN9w55SGbqOU1JJzx4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","TextForm","Alert","BrowserRouter","Router","Switch","Route","Link","App","mode","setMode","alert","setAlert","showAlert","message","setTimeout","colorMode","document","body","style","backgroundColor","toggleMode"],"sources":["/Users/prafulkamble/React JS/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react'\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode] =useState(\"light\")\n  const [alert,setAlert] = useState(null)\n\n \n\n  const showAlert=(message)=>{\n    setAlert(message)\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const colorMode =()=>{\n\n    if(mode!=='red'){\n      setMode('red');\n      document.body.style.backgroundColor='red';\n      showAlert(\"red mode\");\n    }else{\n      setMode('green')\n      document.body.style.backgroundColor='green'\n      showAlert(\"Green mode\");\n    }\n  }\n\n  const toggleMode =()=>{\n\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='black';\n      showAlert(\"Dark mode\");\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light mode\");\n    }\n  }\n\n  return (\n    <>\n    <Navbar title='TextUtils' aboutUs='About TextUtils' mode={mode} toggleMode={toggleMode} colorMode={colorMode}/>\n    <Alert alert={alert}/>\n    {/* below example is for default props passing */}\n    {/* <Navbar/> */}\n    <div className=\"container my-3\">\n      {/* <TextForm heading='Enter Text To Convert' mode={mode}/> */}\n      {/* <About/> */}\n\n      {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/users\">\n          <TextForm heading='Enter Text To Convert' mode={mode}/>\n          </Route>\n        </Switch>\n\n    </div>\n\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,IAAI,QACC,kBAAkB;AAAC;AAAA;AAE1B,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAEX,QAAQ,CAAC,OAAO,CAAC;EACvC,MAAM,CAACY,KAAK,EAACC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAIvC,MAAMc,SAAS,GAAEC,OAAO,IAAG;IACzBF,QAAQ,CAACE,OAAO,CAAC;IAEjBC,UAAU,CAAC,MAAM;MACfH,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMI,SAAS,GAAE,MAAI;IAEnB,IAAGP,IAAI,KAAG,KAAK,EAAC;MACdC,OAAO,CAAC,KAAK,CAAC;MACdO,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,KAAK;MACzCP,SAAS,CAAC,UAAU,CAAC;IACvB,CAAC,MAAI;MACHH,OAAO,CAAC,OAAO,CAAC;MAChBO,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;MAC3CP,SAAS,CAAC,YAAY,CAAC;IACzB;EACF,CAAC;EAED,MAAMQ,UAAU,GAAE,MAAI;IAEpB,IAAGZ,IAAI,KAAG,OAAO,EAAC;MAChBC,OAAO,CAAC,MAAM,CAAC;MACfO,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;MAC3CP,SAAS,CAAC,WAAW,CAAC;IACxB,CAAC,MAAI;MACHH,OAAO,CAAC,OAAO,CAAC;MAChBO,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;MAC3CP,SAAS,CAAC,YAAY,CAAC;IACzB;EACF,CAAC;EAED,oBACE;IAAA,wBACA,QAAC,MAAM;MAAC,KAAK,EAAC,WAAW;MAAC,OAAO,EAAC,iBAAiB;MAAC,IAAI,EAAEJ,IAAK;MAAC,UAAU,EAAEY,UAAW;MAAC,SAAS,EAAEL;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eAC/G,QAAC,KAAK;MAAC,KAAK,EAAEL;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eAGtB;MAAK,SAAS,EAAC,gBAAgB;MAAA,uBAM3B,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAC,IAAI,EAAC,QAAQ;UAAA,uBAClB,QAAC,KAAK;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QACH,eACR,QAAC,KAAK;UAAC,IAAI,EAAC,QAAQ;UAAA,uBACpB,QAAC,QAAQ;YAAC,OAAO,EAAC,uBAAuB;YAAC,IAAI,EAAEF;UAAK;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QAC/C;MAAA;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA,QAEP;EAAA,gBAEL;AAEL;AAAC,GAjEQD,GAAG;AAAA,KAAHA,GAAG;AAmEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}