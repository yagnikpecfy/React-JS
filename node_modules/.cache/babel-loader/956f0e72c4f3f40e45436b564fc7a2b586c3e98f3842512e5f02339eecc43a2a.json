{"ast":null,"code":"var _jsxFileName = \"/Users/prafulkamble/React JS/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router,\n//Switch,\nRoute,\n//Link,\nRoutes } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = message => {\n    setAlert(message);\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const colorMode = () => {\n    if (mode !== 'red') {\n      setMode('red');\n      document.body.style.backgroundColor = 'red';\n      showAlert(\"red mode\");\n    } else if (mode !== 'green') {\n      setMode('green');\n      document.body.style.backgroundColor = 'green';\n      showAlert(\"Green mode\");\n    } else {\n      setMode('black');\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Green mode\");\n    }\n  };\n  const toggleMode = cls => {\n    console.log(cls);\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Dark mode\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        aboutUs: \"About TextUtils\",\n        mode: mode,\n        toggleMode: toggleMode,\n        colorMode: colorMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TextForm, {\n              heading: \"Enter Text To Convert\",\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"rLXVx9POVuN9w55SGbqOU1JJzx4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","About","Navbar","TextForm","Alert","BrowserRouter","Router","Route","Routes","App","mode","setMode","alert","setAlert","showAlert","message","setTimeout","colorMode","document","body","style","backgroundColor","toggleMode","cls","console","log"],"sources":["/Users/prafulkamble/React JS/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react'\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  //Switch,\n  Route,\n  //Link,\n  Routes\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode] =useState(\"light\")\n  const [alert,setAlert] = useState(null)\n\n \n\n  const showAlert=(message)=>{\n    setAlert(message)\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const colorMode =()=>{\n\n    if(mode!=='red'){\n      setMode('red');\n      document.body.style.backgroundColor='red';\n      showAlert(\"red mode\");\n    }else if(mode!=='green'){\n      setMode('green')\n      document.body.style.backgroundColor='green'\n      showAlert(\"Green mode\");\n    } else{\n      setMode('black')\n      document.body.style.backgroundColor='black'\n      showAlert(\"Green mode\");\n    }\n  }\n\n  const toggleMode =(cls)=>{\nconsole.log(cls)\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='black';\n      showAlert(\"Dark mode\");\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light mode\");\n    }\n  }\n\n  return (\n    <>\n    <Router>\n    <Navbar title='TextUtils' aboutUs='About TextUtils' mode={mode} toggleMode={toggleMode} colorMode={colorMode}/>\n    <Alert alert={alert}/>\n    {/* below example is for default props passing */}\n    {/* <Navbar/> */}\n    <div className=\"container my-3\">\n      {/* <TextForm heading='Enter Text To Convert' mode={mode}/> */}\n      {/* <About/> */}\n\n     \n        {/* <Switch>\n          \n          <Route path=\"/about\">\n            <About/>\n          </Route>\n            <Route path=\"/users\">\n          <TextForm heading='Enter Text To Convert' mode={mode}/>\n          </Route>\n        </Switch> */}\n\n    <Routes>\n        <Route exact path=\"/about\" element={<About/>} />\n        <Route exact path=\"/\" element={<TextForm heading='Enter Text To Convert' mode={mode}/>} />\n\n    </Routes>\n\n    </div>\n    </Router>\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}